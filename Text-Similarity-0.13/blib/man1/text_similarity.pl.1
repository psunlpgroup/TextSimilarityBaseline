.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TEXT_SIMILARITY 1"
.TH TEXT_SIMILARITY 1 "2013-06-25" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
text_simlarity.pl \- Measure the pair\-wise similarity between files or strings
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& text_similarity.pl \-\-type Text::Similarity::Overlaps \-\-normalize 
\&                         \-\-string \*(Aq.......this is one\*(Aq \*(Aq????this is two\*(Aq 
\&
\& text_similarity.pl \-\-type Text::Similarity::Overlaps \-\-no\-normalize 
\&                         \-\-string \*(Aq.......this is one\*(Aq \*(Aq????this is two\*(Aq 
\&
\& text_similarity.pl \-\-type Text::Similarity::Overlaps 
\&                         \-\-string \*(Aqsir winston churchill\*(Aq \*(AqChurchill, Winston Sir\*(Aq 
\&
\& text_similarity.pl \-\-type Text::Similarity::Overlaps ../GPL.txt ../FDL.txt
\&
\& text_similarity.pl \-\-verbose \-\-type Text::Similarity::Overlaps ../GPL.txt ../FDL.txt 
\&
\& text_similarity.pl \-\-verbose \-\-stoplist stoplist.txt \-\-type Text::Similarity::Overlaps 
\&                        ../GPL.txt ../FDL.txt 
\&
\& text_similarity.pl [[\-\-verbose] [\-\-stoplist=FILE] [\-\-no\-normalize] [\-\-string]] 
\&                        \-\-type=TYPE | \-\-help | \-\-version] FILE1 FILE2
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is a simple command-line interface to the Text::Similarity
Perl modules. A method for computing similarity must be specified
via the \-\-type option, and then that method is used to measure the
similarity of two strings or two files.
.PP
Text::Similarity::Overlaps measures similarity by counting the 
number of words that overlap (match) between the two inputs, without
regard to order. So, all of the following strings would have the
same pairwise similarity (they would each have a raw score of 4
relative to each other, meaning that 4 words are overlapping or
matching).
.PP
.Vb 3
\& winston churchill was here 
\& here was winston churchill
\& winston was here churchill
.Ve
.PP
By default Text::Similarity::Overlaps returns a normalized F\-measure 
between 0 and 1. Normalization can be turned off by specifying 
\&\-\-no\-normalize. It returns various other overlap based scores if
you specify \-\-verbose.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-type\fR=\fI\s-1TYPE\s0\fR" 4
.IX Item "--type=TYPE"
The type of text similarity measure.  Valid values include:
.Sp
.Vb 1
\&    Text::Similarity::Overlaps
.Ve
.IP "\fB\-\-stoplist\fR=\fI\s-1FILE\s0\fR" 4
.IX Item "--stoplist=FILE"
The name of a file containing stop words. Under the ./sample directory, 
we give two formats of the stop words format, one word per line(stoplist.txt) and 
one word in the regular expression format per line(stoplist\-nsp.regex). If you 
want to mix these two formats to make your own stop words file, it is also all right.
.IP "\fB\-\-no\-normalize\fR" 4
.IX Item "--no-normalize"
Do not normalize scores.  Normally, scores are normalized so that they range
from 0 to 1.  Using this option will give you a raw score instead.
.IP "\fB\-\-string\fR" 4
.IX Item "--string"
Input will be provided on the command line as strings, not files.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Show all the matches that are found between the files, their length and 
frequency, as well as precision, recall, F\-measure, E\-measure, Cosine, 
and the Dice Coefficient.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Show a detailed help message.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Show version information.
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 2
\& Ted Pedersen, University of Minnesota, Duluth
\& tpederse at d.umn.edu
\&
\& Jason Michelizzi
\&
\& Ying Liu, University of Minnesota, Twin Cities
\& liux0395 at umn.edu
.Ve
.PP
Last modified by:
\&\f(CW$Id:\fR text_similarity.pl,v 1.1.1.1 2013/06/26 02:38:12 tpederse Exp $
.SH "BUGS"
.IX Header "BUGS"
.IP "\-\-compfile is not working, seems to cause hang (tdp 3/21/08)" 4
.IX Item "--compfile is not working, seems to cause hang (tdp 3/21/08)"
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2004\-2010, Jason Michelizzi, Ted Pedersen and Ying Liu
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, \s-1MA  02111\-1307  USA\s0
